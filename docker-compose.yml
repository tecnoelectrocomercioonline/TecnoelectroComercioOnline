version: "3.8"

services:
  web:
    build: ./app
    # build: .
    # command: pip3 install -r requirements.txt && python3 manage.py runserver 0.0.0.0:8000
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; gunicorn ecom.wsgi:application --bind 0.0.0.0:8000'
    volumes:
      - ./app/:/usr/src/app/
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/mediafiles
    # image: tecnoelectrocomercioonline:latest
    # container_name: tecnoelectro_django
    expose:
      - 8000
    environment:
      - SECRET_KEY=$SECRET_KEY
      - DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE
      - ROOT_URLCONF=$ROOT_URLCONF
      - TESTING=$TESTING
      - DEBUG=$DEBUG
      - USE_SPACES=$USE_SPACES
      - EMAIL_HOST_USER=$EMAIL_HOST_USER
      - EMAIL_HOST_PASSWORD=$EMAIL_HOST_PASSWORD
      - HEROKUPOSTGRESQL_HOST=$HEROKUPOSTGRESQL_HOST
      - HEROKUPOSTGRESQL_NAME=$HEROKUPOSTGRESQL_NAME
      - HEROKUPOSTGRESQL_USER=$HEROKUPOSTGRESQL_USER
      - HEROKUPOSTGRESQL_PASSWORD=$HEROKUPOSTGRESQL_PASSWORD
      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      - AWS_STORAGE_BUCKET_NAME=$AWS_STORAGE_BUCKET_NAME
      - REDISCLOUD_URL=$REDISCLOUD_URL
      - IMAGEKIT_PRIVATE_KEY=$IMAGEKIT_PRIVATE_KEY
      - IMAGEKIT_PUBLIC_KEY=$IMAGEKIT_PUBLIC_KEY
      - IMAGEKIT_URL_ENDPOINT=$IMAGEKIT_URL_ENDPOINT
    depends_on:
      - db
  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      # - ./data/db:/var/lib/postgresql/data
    expose:
      - 5432
    environment:
      - POSTGRES_NAME=$POSTGRES_NAME
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/mediafiles
    ports:
      - 1337:80
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume:
  media_volume: